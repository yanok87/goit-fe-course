{"version":3,"sources":["webpack:///./fetchWeather.js","webpack:///./getGeoPosition.js"],"names":["weatherApi","fetchWeather","coords","fetch","then","res","status","json","err","Error","statusText","response","catch","PNotify","defaults","delay","latitude","longitude","options","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","location","data","document","querySelector","src","current","condition","icon","textContent","name","feelslike_c","humidity","wind_kph","text","error","cityInput","addEventListener","e","preventDefault","value"],"mappings":"+KAAMA,EAAa,2EAEZ,SAASC,EAAaC,GAC3B,OAAOC,MAASH,EAAJ,MAAoBE,GAC/BE,KAAK,SAACC,GACL,GAAIA,EAAIC,QAAU,KAAOD,EAAIC,OAAS,IACpC,OAAOD,EAAIE,OAEX,IAAIC,EAAM,IAAIC,MAAMJ,EAAIK,YAExB,MADAF,EAAIG,SAAWN,EACTG,IAGTI,MAAM,SAAAJ,GAAG,OAAIA,oBCRhBK,IAAQC,SAASC,MAAQ,KAEzB,IAUIC,EACAC,EAVIC,KAAU,CACdC,WAAY,MAGP,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQJ,MAS3Dd,KAAK,SAAAsB,GACJV,EAAWU,EAASxB,OAAOc,SAC3BC,EAAYS,EAASxB,OAAOe,UAc9BhB,EAFkBe,EAAN,IAAkBC,GAETb,KAAK,SAACuB,GACzBC,SAASC,cAAc,SAASC,IAAMH,EAAKI,QAAQC,UAAUC,KAC7DL,SAASC,cAAc,2BAA2BK,YAAcP,EAAKD,SAASS,KAC9EP,SAASC,cAAc,uBAAuBK,YAAcP,EAAKI,QAAQK,YAAc,KACvFR,SAASC,cAAc,2BAA2BK,YAAcP,EAAKI,QAAQM,SAAW,IACxFT,SAASC,cAAc,uBAAuBK,YAAcP,EAAKI,QAAQO,SAAW,MACpFV,SAASC,cAAc,6BAA6BK,YAAcP,EAAKI,QAAQC,UAAUO,SAf1F3B,MAAM,SAAA4B,GACL3B,IAAQ2B,MACN,mEAsBN,IAAMC,EAAYb,SAASC,cAAc,iBAC5BD,SAASC,cAAc,gBAE/Ba,iBAAiB,SAAU,SAAUC,GACxCA,EAAEC,iBAOF3C,EALOwC,EAAUI,OAMhBzC,KAAK,SAACuB,GACLC,SAASC,cAAc,SAASC,IAAMH,EAAKI,QAAQC,UAAUC,KAC7DL,SAASC,cAAc,2BAA2BK,YAAcP,EAAKD,SAASS,KAC9EP,SAASC,cAAc,uBAAuBK,YAAcP,EAAKI,QAAQK,YAAc,KACvFR,SAASC,cAAc,2BAA2BK,YAAcP,EAAKI,QAAQM,SAAW,IACxFT,SAASC,cAAc,uBAAuBK,YAAcP,EAAKI,QAAQO,SAAW,MACpFV,SAASC,cAAc,6BAA6BK,YAAcP,EAAKI,QAAQC,UAAUO,OAE1F3B,MAAM,SAAAJ,GAAG,OAAIK,IAAQ2B,MAAM","file":"main.a27ca712a5348937a184.js","sourcesContent":["const weatherApi = 'https://api.apixu.com/v1/current.json?key=fbd0a2089b144587a6675044190708'\n\nexport function fetchWeather(coords){\n  return fetch(`${weatherApi}&q=${coords}`)\n  .then((res) => {\n    if (res.status >= 200 && res.status < 300) {\n      return res.json()\n    } else {\n      let err = new Error(res.statusText)\n      err.response = res\n      throw err\n    }\n  })\n  .catch(err => err)\n}\n\n\n\n","import {\n  fetchWeather\n} from './fetchWeather.js';\nimport PNotify from 'pnotify/dist/es/PNotify';\n\nPNotify.defaults.delay = 1500;\n\nconst getCurrentPositions = () => {\n  const options = {\n    maximumAge: 1000 * 60 * 30\n  };\n\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  });\n};\n\nlet latitude;\nlet longitude;\n\n\ngetCurrentPositions()\n  .then(location => {\n    latitude = location.coords.latitude;\n    longitude = location.coords.longitude;\n\n    locationKnown();\n\n  })\n  .catch(error => {\n    PNotify.error(\n      \"Geolocation has failed. Please use manual search of your city\"\n    );\n  })\n\nfunction locationKnown() {\n  const coords = `${latitude},${longitude}`;\n\n  fetchWeather(coords).then((data) => {\n    document.querySelector('.icon').src = data.current.condition.icon;\n    document.querySelector('[data-field=\"location\"]').textContent = data.location.name;\n    document.querySelector('[data-field=\"temp\"]').textContent = data.current.feelslike_c + '°C';\n    document.querySelector('[data-field=\"humidity\"]').textContent = data.current.humidity + '%';\n    document.querySelector('[data-field=\"wind\"]').textContent = data.current.wind_kph + 'kph';\n    document.querySelector('[data-field=\"conditions\"]').textContent = data.current.condition.text;\n  })\n}\n\n// ==== INPUT\n\n\n\nlet city;\nconst cityInput = document.querySelector('[name=\"city\"]');\nconst form = document.querySelector('#search-form');\n\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n\n  city = cityInput.value;\n  locationOnSubmit()\n});\n\nfunction locationOnSubmit() {\n  fetchWeather(city)\n  .then((data) => {\n    document.querySelector('.icon').src = data.current.condition.icon;\n    document.querySelector('[data-field=\"location\"]').textContent = data.location.name;\n    document.querySelector('[data-field=\"temp\"]').textContent = data.current.feelslike_c + '°C';\n    document.querySelector('[data-field=\"humidity\"]').textContent = data.current.humidity + '%';\n    document.querySelector('[data-field=\"wind\"]').textContent = data.current.wind_kph + 'kph';\n    document.querySelector('[data-field=\"conditions\"]').textContent = data.current.condition.text;\n  })\n  .catch(err => PNotify.error(\"Вы ввели крокозябрики!\"))\n}\n"],"sourceRoot":""}